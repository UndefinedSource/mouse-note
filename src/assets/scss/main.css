* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  outline: none;
}

body {
  overflow: hidden;
  /* remove scrollbars */
}

input:focus {
  outline: none;
}

button {
  background-color: white;
  border: none;
  cursor: pointer;
}

.color-palette .btn.color, .color-palette .btn.tool-color-picker {
  width: 1.5rem;
  height: 1.5rem;
  transition: transform 0.2s ease;
  border-radius: 25%;
}
.color-palette .btn.color:hover, .color-palette .btn.tool-color-picker:hover {
  transform: scale(1.2);
}
.color-palette .btn.color:not(:last-child), .color-palette .btn.tool-color-picker:not(:last-child) {
  margin-right: 1rem;
}

.icon {
  width: 1.5rem;
  height: 1.5rem;
  transition: transform 0.2s ease;
  background-color: transparent;
}
.icon:hover {
  transform: scale(1.2);
}
.icon.pen {
  background-image: url("../images/pen.svg");
}
.icon.circle {
  background-image: url("../images/circle.svg");
}
.icon.square {
  background-image: url("../images/square.svg");
}
.icon.rect {
  background-image: url("../images/rect.svg");
}
.icon.ellipse {
  background-image: url("../images/ellipse.svg");
}
.icon.grid {
  background-image: url("../images/grid.svg");
}
.icon.trash-can {
  background-image: url("../images/trash-can.svg");
}
.icon.save {
  background-image: url("../images/save.svg");
}

input[type=range], input[type=color] {
  cursor: pointer;
}

input[type=text] {
  background: transparent;
}

input[type=range].ipt-size {
  transition: transform 0.2s ease;
}
input[type=range].ipt-size:hover {
  transform: scale(1.1);
}

input[type=color] {
  transition: transform 0.2s ease;
  background: none;
  border: none;
}
input[type=color]:hover {
  transform: scale(1.2);
}
input[type=color]::-webkit-color-swatch-wrapper {
  padding: 0;
}
input[type=color]::-webkit-color-swatch {
  border: none;
}

.canvas-background-picker, .tool-color-picker {
  width: 1.5rem;
  height: 1.5rem;
  position: relative;
}
.canvas-background-picker::before, .tool-color-picker::before {
  width: 100%;
  height: 100%;
  position: absolute;
  content: "";
}

.canvas-background-picker::before {
  background: url("../images/canvas-background-picker.svg");
}

.tool-color-picker::-webkit-color-swatch {
  border-radius: 25%;
}
.tool-color-picker::before {
  background: url("../images/color-picker.svg");
}

#panel {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: flex-start;
  flex-wrap: wrap;
  width: 100%;
  background-color: #636262;
}
#panel > div {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  margin: 0.5rem 0 0.5rem 0.5rem;
  background-color: #6d6d6d;
  border-radius: 0.2rem;
}
#panel > div > * {
  margin: 0.3rem;
}

#canvas {
  background-color: white;
}

.tool-size .lbl-size {
  width: 2rem;
  text-align: center;
  color: white;
}

.cursor {
  position: absolute;
  left: var(--x);
  background-color: var(--color);
  pointer-events: none;
}
.cursor.crosshair {
  width: var(--size);
  height: 1px;
  top: var(--y);
}
.cursor.crosshair:before {
  position: absolute;
  left: var(--crosshairVerticalX);
  top: var(--crosshairVerticalY);
  height: var(--size);
  border-left: 1px solid var(--color);
  content: "";
}
.cursor.circle, .cursor.square {
  width: var(--size);
  height: var(--size);
  top: var(--y);
}
.cursor.circle {
  border-radius: 50%;
}

.shape-previewer {
  position: absolute;
  left: var(--x);
  top: var(--y);
  width: var(--width);
  height: var(--height);
  display: var(--display);
  background-color: var(--backgroundColor);
  border-style: dashed;
  border-color: black;
  border-radius: var(--borderRadius);
  pointer-events: none;
  opacity: 0.1;
}

.grid-line {
  position: absolute;
  background-color: black;
}
.grid-line.vertical {
  width: 1px;
}
.grid-line.horizontal {
  width: 100%;
  height: 1px;
  left: 0;
}

svg {
  cursor: pointer;
  transition: transform 0.2s ease;
}
svg * {
  fill: white;
}
svg:hover {
  transform: scale(1.2);
}
svg .background-element {
  fill: #6d6d6d;
  stroke: none;
}

/*# sourceMappingURL=main.css.map */
