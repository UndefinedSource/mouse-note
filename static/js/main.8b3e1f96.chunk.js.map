{"version":3,"sources":["helper/constants.js","helper/canvas.js","helper/shape.js","helper/style.js","helper/color.js","helper/regrex.js","components/ShapePreviewer.tsx","hooks/useEventListener.tsx","components/Cursor.tsx","components/Canvas.tsx","components/Functions.tsx","components/Panel.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["exports","__esModule","EVENT_LISTENER","APP_SETTING","CURSOR_CLASS","KEYBOARD_KEY","TOOL_MODE","CURSOR_STYLE","COLOR","BLACK","WHITE","RED","GREEN","BLUE","CROSSHAIR","CIRCLE","SQUARE","TEXT","PEN","SHAPE","RECT","ELLIPSE","E","SHIFT","SHAPE_RECT","SHAPE_ELLIPSE","CANVAS","BACKGROUND_COLOR","TOOL","MODE","SIZE","GRID","LINE_WIDTH","GAP","RESIZE","MOUSE","UP","DOWN","MOVE","KEY","TOUCH","START","END","drawCircle","ctx","x","y","radius","strokeColor","fillColor","beginPath","lineWidth","this","strokeStyle","arc","Math","PI","fillStyle","fill","stroke","drawEllipse","radiusX","radiusY","ellipse","drawLine","lineTo","drawSquare","sideLen","fillRect","drawRectangle","width","height","finishDraw","getHalfLineWidth","getTriangleHypotenuse","sqrt","getX","toolSize","getY","getRadius","isEndXLeft","x1","x2","isEndYDown","y1","y2","getWidth","getHeight","getMinSideLength","startX","startY","endX","endY","abs","getCenterPosition","getEllipse","_a","getCircle","getRegularShape","sideLength","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","STYLE","getPosition","getWidthAndHeight","getPen","size","color","halfSize","getSquare","getShapePreview","backgroundColor","displayConditions","showDisplay","every","cond","getCirclePreview","style","hexAlphabets","convertHexToRgb","value","parseInt","substr","convertNumToHex","hex","toString","convertDecimalToHex","priorDigit","convertRgbToHex","rgbEachValues","match","_i","rgbEachValues_1","rgbValue","Number","REGREX","getRegrexNumberRange","start","end","RegExp","ShapePreviewer","dragPosition","isShiftKeyOn","toolColor","toolMode","position","previewConditions","regularShape","useCallback","rectanglePreviewStyle","useMemo","ellipsePreviewStyle","squarePreviewStyle","circlePreviewStyle","className","getShapePreviewStyle","useEventListener","eventName","func","eventHandler","e","useEffect","window","addEventListener","removeEventListener","Cursor","React","memo","canvasRef","panelRef","tool","useState","setPosition","setDragPosition","drawable","setDrawable","setIsShiftKeyOn","getCanvasContext","current","getContext","getPanelHeight","clientHeight","isShapeMode","values","some","mode","getDragPosition","getPreviewConditions","getShapeEllipse","getShapeCircle","getTouchPosition","targetTouches","clientX","clientY","drawShapeRectangle","drawShapeSquare","drawShapeEllipse","drawShapeCircle","drawPen","draw","updatePositionState","prevState","updateDragPositionState","mouseUp","mouseDown","mouseMove","touchStart","touchMove","keyUp","keyDown","key","id","getCursorStyle","Canvas","forwardRef","ref","hasGrid","rows","cols","lineGap","grid","setGrid","innerWidth","innerHeight","createGrid","gridLines","push","BackgroundPicker","props","type","defaultValue","onChange","handleBackgroundColorChange","Grid","onClick","handleOnClick","TrashCan","Save","Panel","handleCanvasBackgroundColorChange","handleCanvasClear","handleExportAsImage","handleGridShow","handleToolColorChange","handleToolModeChange","handleToolSizeChange","toolSizeRef","useRef","canvasBackgroundPickerRef","colors","modes","name","shapeModes","colorNum","map","min","max","currentTarget","COLOR_CONVERTER","changeToolColor","App","setHasGrid","canvas","setCanvas","setTool","changeToolMode","changeToolSize","changeCanvasBackgroundColor","clearCanvas","clearRect","resize","outerWidth","image","toDataURL","anchorElement","document","createElement","download","href","click","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8b3e1f96.chunk.js","sourcesContent":["exports.__esModule = true;\r\nexports.EVENT_LISTENER = exports.APP_SETTING = exports.CURSOR_CLASS = exports.KEYBOARD_KEY = exports.TOOL_MODE = exports.CURSOR_STYLE = exports.COLOR = void 0;\r\nexports.COLOR = {\r\n    BLACK: 'rgb(  0,   0,   0)',\r\n    WHITE: 'rgb(255, 255, 255)',\r\n    RED: 'rgb(235,  64,  52)',\r\n    GREEN: 'rgb( 50, 168,  82)',\r\n    BLUE: 'rgb( 66, 135, 245)'\r\n};\r\nexports.CURSOR_STYLE = {\r\n    CROSSHAIR: 'cursor crosshair',\r\n    CIRCLE: 'cursor circle',\r\n    SQUARE: 'cursor square',\r\n    TEXT: 'cursor text'\r\n};\r\nexports.TOOL_MODE = {\r\n    PEN: 'PEN',\r\n    CIRCLE: 'CIRCLE',\r\n    SQUARE: 'SQUARE',\r\n    SHAPE: {\r\n        RECT: 'SHAPE_RECT',\r\n        ELLIPSE: 'SHAPE_ELLIPSE'\r\n    }\r\n};\r\nexports.KEYBOARD_KEY = {\r\n    E: 'e',\r\n    SHIFT: 'Shift'\r\n};\r\n// Constants with dependencies of previous constant\r\nexports.CURSOR_CLASS = {\r\n    PEN: exports.CURSOR_STYLE.CROSSHAIR,\r\n    CIRCLE: exports.CURSOR_STYLE.CIRCLE,\r\n    SQUARE: exports.CURSOR_STYLE.SQUARE,\r\n    SHAPE_RECT: exports.CURSOR_STYLE.CROSSHAIR,\r\n    SHAPE_ELLIPSE: exports.CURSOR_STYLE.CROSSHAIR,\r\n    TEXT: exports.CURSOR_STYLE.TEXT\r\n};\r\nexports.APP_SETTING = {\r\n    CANVAS: {\r\n        BACKGROUND_COLOR: exports.COLOR.WHITE\r\n    },\r\n    TOOL: {\r\n        MODE: exports.TOOL_MODE.PEN,\r\n        COLOR: exports.COLOR.BLACK,\r\n        SIZE: 10\r\n    },\r\n    GRID: {\r\n        LINE_WIDTH: 1,\r\n        GAP: 30\r\n    }\r\n};\r\nexports.EVENT_LISTENER = {\r\n    RESIZE: 'resize',\r\n    MOUSE: {\r\n        UP: 'mouseup',\r\n        DOWN: 'mousedown',\r\n        MOVE: 'mousemove'\r\n    },\r\n    KEY: {\r\n        UP: 'keyup',\r\n        DOWN: 'keydown'\r\n    },\r\n    TOUCH: {\r\n        START: 'touchstart',\r\n        END: 'touchend',\r\n        MOVE: 'touchmove'\r\n    }\r\n};\r\n","exports.__esModule = true;\r\nexports.CANVAS = void 0;\r\nexports.CANVAS = {\r\n    LINE_WIDTH: 1,\r\n    drawCircle: function (ctx, x, y, radius, strokeColor, fillColor) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = this.LINE_WIDTH;\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.arc(x, y, radius, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = fillColor;\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    },\r\n    drawEllipse: function (ctx, x, y, radiusX, radiusY, strokeColor, fillColor) {\r\n        ctx.beginPath();\r\n        ctx.lineWidth = this.LINE_WIDTH;\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.ellipse(x, y, radiusX, radiusY, Math.PI, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = fillColor;\r\n        ctx.fill();\r\n        ctx.stroke();\r\n    },\r\n    drawLine: function (ctx, x, y, lineWidth, strokeColor) {\r\n        ctx.lineTo(x, y);\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.stroke();\r\n    },\r\n    drawSquare: function (ctx, x, y, sideLen, fillColor) {\r\n        ctx.fillStyle = fillColor;\r\n        ctx.fillRect(x, y, sideLen, sideLen);\r\n    },\r\n    drawRectangle: function (ctx, x, y, width, height, fillColor) {\r\n        ctx.fillStyle = fillColor;\r\n        ctx.fillRect(x, y, width, height);\r\n    },\r\n    finishDraw: function (ctx) {\r\n        ctx.beginPath(); // start new drawing\r\n    },\r\n    getHalfLineWidth: function () {\r\n        return this.LINE_WIDTH / 2;\r\n    },\r\n    getTriangleHypotenuse: function (x, y) {\r\n        return Math.sqrt((x * x) + (y * y));\r\n    },\r\n    SQUARE: {\r\n        getX: function (x, toolSize) {\r\n            return x - (toolSize / 2);\r\n        },\r\n        getY: function (y, toolSize) {\r\n            return this.getX(y, toolSize);\r\n        }\r\n    },\r\n    CIRCLE: {\r\n        // arc total radius is determined by radius plus lineWidth\r\n        getRadius: function (toolSize) {\r\n            var radius = (toolSize / 2) - exports.CANVAS.LINE_WIDTH;\r\n            return radius > 0 ? radius : exports.CANVAS.LINE_WIDTH / 2; // prevent radius below or equal to 0\r\n        }\r\n    }\r\n};\r\n","exports.__esModule = true;\r\nexports.SHAPE = void 0;\r\nexports.SHAPE = {\r\n    isEndXLeft: function (x1, x2) {\r\n        return (x1 < x2) ? true : false;\r\n    },\r\n    isEndYDown: function (y1, y2) {\r\n        return this.isEndXLeft(y1, y2);\r\n    },\r\n    getX: function (x1, x2) {\r\n        return (x1 < x2) ? x1 : x2;\r\n    },\r\n    getY: function (y1, y2) {\r\n        return this.getX(y1, y2);\r\n    },\r\n    getWidth: function (x1, x2) {\r\n        return (x1 < x2) ? (x2 - x1) : (x1 - x2);\r\n    },\r\n    getHeight: function (y1, y2) {\r\n        return this.getWidth(y1, y2);\r\n    },\r\n    getMinSideLength: function (startX, startY, endX, endY) {\r\n        var width = Math.abs(endX - startX);\r\n        var height = Math.abs(endY - startY);\r\n        return width < height ? width : height;\r\n    },\r\n    getCenterPosition: function (startX, startY, endX, endY) {\r\n        var x = (startX + endX) / 2;\r\n        var y = (startY + endY) / 2;\r\n        return { x: x, y: y };\r\n    },\r\n    getEllipse: function (startX, startY, endX, endY) {\r\n        var _a = this.getCenterPosition(startX, startY, endX, endY), x = _a.x, y = _a.y;\r\n        var radiusX = this.getWidth(startX, endX) / 2;\r\n        var radiusY = this.getHeight(startY, endY) / 2;\r\n        return { x: x, y: y, radiusX: radiusX, radiusY: radiusY };\r\n    },\r\n    // x, y are the center of circle\r\n    getCircle: function (startX, startY, endX, endY) {\r\n        var x = startX;\r\n        var y = startY;\r\n        var radius = this.getMinSideLength(startX, startY, endX, endY) / 2;\r\n        var isEndXLeft = this.isEndXLeft(startX, endX);\r\n        var isEndYDown = this.isEndYDown(startY, endY);\r\n        if (isEndXLeft && isEndYDown) {\r\n            x += radius;\r\n            y += radius;\r\n        }\r\n        else if (!isEndXLeft && isEndYDown) {\r\n            x -= radius;\r\n            y += radius;\r\n        }\r\n        else if (isEndXLeft && !isEndYDown) {\r\n            x += radius;\r\n            y -= radius;\r\n        }\r\n        else {\r\n            x -= radius;\r\n            y -= radius;\r\n        }\r\n        return { x: x, y: y, radius: radius };\r\n    },\r\n    // get regular shape which draws from top left\r\n    getRegularShape: function (startX, startY, endX, endY) {\r\n        var sideLength = this.getMinSideLength(startX, startY, endX, endY);\r\n        var x = startX;\r\n        var y = startY;\r\n        var isEndXLeft = this.isEndXLeft(startX, endX);\r\n        var isEndYDown = this.isEndYDown(startY, endY);\r\n        if (isEndXLeft && isEndYDown) {\r\n            return { x: x, y: y, sideLength: sideLength };\r\n        }\r\n        else if (!isEndXLeft && isEndYDown) {\r\n            x -= sideLength;\r\n        }\r\n        else if (isEndXLeft && !isEndYDown) {\r\n            y -= sideLength;\r\n        }\r\n        else {\r\n            x = startX - sideLength;\r\n            y = startY - sideLength;\r\n        }\r\n        return { x: x, y: y, sideLength: sideLength };\r\n    }\r\n};\r\n","var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nexports.STYLE = void 0;\r\nexports.STYLE = {\r\n    getPosition: function (x, y) {\r\n        return {\r\n            '--x': x + \"px\",\r\n            '--y': y + \"px\"\r\n        };\r\n    },\r\n    getWidthAndHeight: function (width, height) {\r\n        return {\r\n            '--width': width + \"px\",\r\n            '--height': height + \"px\"\r\n        };\r\n    },\r\n    getPen: function (x, y, size, color) {\r\n        var halfSize = size / 2;\r\n        return __assign(__assign({}, this.getPosition(x - halfSize, y)), { '--crosshairVerticalX': halfSize + \"px\", '--crosshairVerticalY': -halfSize + \"px\", '--size': size + \"px\", '--color': \"\" + color });\r\n    },\r\n    getCircle: function (x, y, size, color) {\r\n        var halfSize = size / 2;\r\n        return __assign(__assign({}, this.getPosition(x - halfSize, y - halfSize)), { '--size': size + \"px\", '--color': \"\" + color });\r\n    },\r\n    getSquare: function (x, y, size, color) {\r\n        return this.getCircle(x, y, size, color);\r\n    },\r\n    getShapePreview: function (x, y, width, height, backgroundColor, displayConditions) {\r\n        var showDisplay = displayConditions.every(function (cond) { return cond === true; });\r\n        return __assign(__assign(__assign({}, this.getPosition(x, y)), this.getWidthAndHeight(width, height)), { '--backgroundColor': \"\" + backgroundColor, '--display': \"\" + (showDisplay ? 'inline' : 'none') });\r\n    },\r\n    getCirclePreview: function (x, y, width, height, backgroundColor, displayConditions) {\r\n        var style = this.getShapePreview(x, y, width, height, backgroundColor, displayConditions);\r\n        style['borderRadius'] = '50%';\r\n        return style;\r\n    }\r\n};\r\n","exports.__esModule = true;\r\nexports.COLOR = void 0;\r\nexports.COLOR = {\r\n    // Typescript enum hexMap\r\n    hexAlphabets: ['A', 'B', 'C', 'D', 'E', 'F'],\r\n    convertHexToRgb: function (value) {\r\n        var redValue = parseInt(value.substr(1, 2), 16);\r\n        var greenValue = parseInt(value.substr(3, 2), 16);\r\n        var blueValue = parseInt(value.substr(5, 2), 16);\r\n        return \"rgb(\" + redValue + \",\" + greenValue + \",\" + blueValue + \")\";\r\n    },\r\n    convertNumToHex: function (value) {\r\n        var maxSingleNum = 9;\r\n        var hexIndex = 10;\r\n        var hex = value.toString();\r\n        if (value > maxSingleNum) {\r\n            hex = this.hexAlphabets[value - hexIndex];\r\n        }\r\n        return hex;\r\n    },\r\n    convertDecimalToHex: function (value) {\r\n        var hexTotalCount = 16;\r\n        var maxHexNum = 15;\r\n        var priorDigit = 0;\r\n        var currentDigit = 0;\r\n        while (value > maxHexNum) {\r\n            value -= hexTotalCount;\r\n            priorDigit++;\r\n        }\r\n        var priorHexDigit = this.convertNumToHex(priorDigit);\r\n        var currentHexDigit = this.convertNumToHex(currentDigit);\r\n        return \"\" + priorHexDigit + currentHexDigit;\r\n    },\r\n    convertRgbToHex: function (value) {\r\n        var hex = '#';\r\n        // split by 3 digit numbers\r\n        var rgbEachValues = value.match(/[0-9]+/g);\r\n        if (rgbEachValues) {\r\n            for (var _i = 0, rgbEachValues_1 = rgbEachValues; _i < rgbEachValues_1.length; _i++) {\r\n                var rgbValue = rgbEachValues_1[_i];\r\n                hex += this.convertDecimalToHex(Number(rgbValue));\r\n            }\r\n        }\r\n        return hex;\r\n    }\r\n};\r\n","exports.__esModule = true;\r\nexports.REGREX = void 0;\r\nexports.REGREX = {\r\n    getRegrexNumberRange: function (start, end) {\r\n        if (start) {\r\n            return new RegExp(\"[\" + start + \"-\" + end + \"]\");\r\n        }\r\n        return new RegExp(\"[\" + 0 + \"-\" + end + \"]\");\r\n    }\r\n};\r\n","import React, { useCallback, useMemo } from 'react';\r\nimport { TOOL_MODE } from '../helper/constants';\r\nimport { SHAPE } from '../helper/shape';\r\nimport { STYLE } from '../helper/style';\r\nimport { Type } from '../types';\r\n\r\ninterface Props {\r\n    dragPosition: Type.DragPosition;\r\n    isShiftKeyOn: boolean;\r\n    position: Type.Position;\r\n    previewConditions: boolean[];\r\n    regularShape: Type.RegularShape;\r\n    toolColor: string;\r\n    toolMode: string;\r\n}\r\n\r\nexport const ShapePreviewer: React.FC<Props> = (\r\n    { dragPosition, isShiftKeyOn, toolColor, toolMode, position, previewConditions, regularShape }) => {\r\n\r\n    const getShapePreview = useCallback((): Type.Shape => {\r\n        const x = SHAPE.getX(dragPosition.x, position.x);\r\n        const y = SHAPE.getY(dragPosition.y, position.y);\r\n        const width = SHAPE.getWidth(dragPosition.x, position.x);\r\n        const height = SHAPE.getHeight(dragPosition.y, position.y);\r\n        return { x, y, width, height };\r\n    }, [dragPosition, position]);\r\n\r\n    const rectanglePreviewStyle = useMemo((): Type.Style => {\r\n        const { x, y, width, height } = getShapePreview();\r\n\r\n        return STYLE.getShapePreview(x, y, width, height, toolColor, previewConditions);\r\n    }, [toolColor, previewConditions, getShapePreview]);\r\n\r\n    const ellipsePreviewStyle = useMemo((): Type.Style => {\r\n        const { x, y, width, height } = getShapePreview();\r\n\r\n        return STYLE.getCirclePreview(x, y, width, height, toolColor, previewConditions);\r\n    }, [toolColor, previewConditions, getShapePreview]);\r\n\r\n    const squarePreviewStyle = useMemo((): Type.Style => {\r\n        const { x, y, sideLength } = regularShape;\r\n\r\n        return STYLE.getShapePreview(x, y, sideLength, sideLength, toolColor, previewConditions);\r\n    }, [toolColor, regularShape, previewConditions]);;\r\n\r\n    const circlePreviewStyle = useMemo((): Type.Style => {\r\n        const { x, y, sideLength } = regularShape;\r\n\r\n        return STYLE.getCirclePreview(x, y, sideLength, sideLength, toolColor, previewConditions);\r\n    }, [toolColor, regularShape, previewConditions]);\r\n\r\n    const getShapePreviewStyle = (): Type.Style => {\r\n        switch (toolMode) {\r\n            case TOOL_MODE.SHAPE.RECT:\r\n                return (isShiftKeyOn) ? squarePreviewStyle : rectanglePreviewStyle;\r\n            case TOOL_MODE.SHAPE.ELLIPSE:\r\n                return (isShiftKeyOn) ? circlePreviewStyle : ellipsePreviewStyle;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        return { };\r\n    };\r\n\r\n    return (\r\n        <div className='shape-previewer' style={getShapePreviewStyle()}/>\r\n    );\r\n};","import { useEffect, useCallback } from 'react';\r\n\r\nexport const useEventListener = (eventName: string, func: Function) => {\r\n    const eventHandler = useCallback((e: any): void => {\r\n        func(e);\r\n    }, [func]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(eventName, eventHandler);\r\n    \r\n        return () => {\r\n            window.removeEventListener(eventName, eventHandler);\r\n        };\r\n    }, [eventName, eventHandler]);\r\n};","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ShapePreviewer } from './ShapePreviewer';\r\nimport { TOOL_MODE, CURSOR_CLASS, KEYBOARD_KEY, EVENT_LISTENER } from '../helper/constants';\r\nimport { CANVAS } from '../helper/canvas';\r\nimport { SHAPE } from '../helper/shape';\r\nimport { STYLE } from '../helper/style';\r\nimport { Type } from '../types';\r\nimport { useEventListener } from '../hooks/useEventListener';\r\n\r\ninterface Props {\r\n    canvasRef: React.RefObject<HTMLCanvasElement>;\r\n    panelRef: React.RefObject<HTMLDivElement>;\r\n    tool: Type.Tool;\r\n}\r\n\r\nexport const Cursor: React.FC<Props> = React.memo(({ canvasRef, panelRef, tool }) => {\r\n    const [position, setPosition] = useState<Type.Position>({ x: 0, y: 0, });\r\n    const [dragPosition, setDragPosition] = useState<Type.DragPosition>({ x: 0, y: 0, });\r\n    const [drawable, setDrawable] = useState<boolean>(false);\r\n    const [isShiftKeyOn, setIsShiftKeyOn] = useState<boolean>(false);\r\n\r\n    const getCursorStyle = (): Type.Style => {\r\n        switch (tool.mode) {\r\n            case TOOL_MODE.CIRCLE:\r\n                return STYLE.getCircle(position.x, position.y, tool.size, tool.color);\r\n            case TOOL_MODE.SQUARE:\r\n                return STYLE.getSquare(position.x, position.y, tool.size, tool.color);\r\n        }\r\n        \r\n        return STYLE.getPen(position.x, position.y, tool.size, tool.color);\r\n    };\r\n\r\n    const getCanvasContext = useCallback((): CanvasRenderingContext2D | null => {\r\n        return canvasRef.current ? canvasRef.current.getContext('2d') : null;\r\n    }, [canvasRef]);\r\n\r\n    const getPanelHeight = useCallback((): number => {\r\n        return panelRef.current ? panelRef.current.clientHeight : 0;\r\n    }, [panelRef]);\r\n\r\n    const isShapeMode = useCallback((): boolean => {\r\n        return Object.values(TOOL_MODE.SHAPE).some(mode => mode === tool.mode);\r\n    }, [tool.mode]);\r\n\r\n    const getDragPosition = useCallback((): Type.DragPosition => {\r\n        return { x: dragPosition.x, y: dragPosition.y };\r\n    }, [dragPosition]);\r\n\r\n    const getPosition = useCallback((): Type.Position => {\r\n        return { x: position.x, y: position.y };\r\n    }, [position]);\r\n\r\n    const getPreviewConditions = useCallback((): boolean[] => {\r\n        return [drawable, isShapeMode()];\r\n    }, [drawable, isShapeMode]);\r\n\r\n    const getRegularShape = useCallback((): Type.RegularShape => {\r\n        return SHAPE.getRegularShape(dragPosition.x, dragPosition.y, position.x, position.y);\r\n    }, [position, dragPosition]);\r\n\r\n    const getShapeEllipse = useCallback((): Type.Ellipse => {\r\n        return SHAPE.getEllipse(dragPosition.x, dragPosition.y, position.x, position.y);\r\n    }, [position, dragPosition]);\r\n\r\n    const getShapeCircle = useCallback((): Type.Circle => {\r\n        return SHAPE.getCircle(dragPosition.x, dragPosition.y, position.x, position.y);\r\n    }, [position, dragPosition]);\r\n\r\n    const getTouchPosition = (e: TouchEvent): Type.Position => {\r\n        const x = e.targetTouches[0].clientX;\r\n        const y = e.targetTouches[0].clientY;\r\n        return { x, y };\r\n    };\r\n\r\n    const drawShapeRectangle = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const y = dragPosition.y - getPanelHeight();\r\n        const width = position.x - dragPosition.x;\r\n        const height = position.y - dragPosition.y;\r\n\r\n        CANVAS.drawRectangle(ctx, dragPosition.x, y, width, height, tool.color);\r\n    }, [position, dragPosition, tool.color, getCanvasContext, getPanelHeight]);\r\n\r\n    const drawShapeSquare = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const { x, y, sideLength } = getRegularShape();\r\n        CANVAS.drawSquare(ctx, x, y - getPanelHeight(), sideLength, tool.color);\r\n    }, [tool.color, getCanvasContext, getPanelHeight, getRegularShape]);\r\n\r\n    const drawShapeEllipse = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const { x, y, radiusX, radiusY } = getShapeEllipse();\r\n        CANVAS.drawEllipse(ctx, x, y - getPanelHeight(), radiusX, radiusY, tool.color, tool.color);\r\n    }, [tool.color, getCanvasContext, getPanelHeight, getShapeEllipse]);\r\n\r\n    const drawShapeCircle = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const { x, y, radius } = getShapeCircle();\r\n        CANVAS.drawCircle(ctx, x, y - getPanelHeight(), radius, tool.color, tool.color);\r\n    }, [tool.color, getCanvasContext, getPanelHeight, getShapeCircle]);\r\n\r\n    const drawPen = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const y = position.y - getPanelHeight();\r\n        CANVAS.drawLine(ctx, position.x, y, tool.size, tool.color);\r\n    }, [position, tool.size, tool.color, getCanvasContext, getPanelHeight]);\r\n\r\n    const drawCircle = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const y = position.y - getPanelHeight();\r\n        const radius = CANVAS.CIRCLE.getRadius(tool.size);\r\n        CANVAS.drawCircle(ctx, position.x, y, radius, tool.color, tool.color);\r\n    }, [position, tool.color, tool.size, getCanvasContext, getPanelHeight]);\r\n\r\n    const drawSquare = useCallback((): void => {\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        const x = CANVAS.SQUARE.getX(position.x, tool.size);\r\n        const y = CANVAS.SQUARE.getY(position.y, tool.size) - getPanelHeight();\r\n        CANVAS.drawSquare(ctx, x, y, tool.size, tool.color);\r\n    }, [position, tool.color, tool.size, getCanvasContext, getPanelHeight]);\r\n\r\n    const draw = useCallback((): void => {\r\n        const { PEN, CIRCLE, SQUARE } = TOOL_MODE;\r\n        switch (tool.mode) {\r\n            case PEN:\r\n                drawPen();\r\n                break;\r\n            case CIRCLE:\r\n                drawCircle();\r\n                break;\r\n            case SQUARE:\r\n                drawSquare();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [tool.mode, drawPen, drawCircle, drawSquare]);\r\n\r\n    const updatePositionState = useCallback((x: number, y: number) => {\r\n        setPosition((prevState : any) => ({\r\n            ...prevState,\r\n            x: x, \r\n            y: y,\r\n        }));\r\n    }, []);\r\n\r\n    const updateDragPositionState = useCallback((x: number, y: number) => {\r\n        setDragPosition((prevState : any) => ({\r\n            ...prevState,\r\n            x: x, \r\n            y: y,\r\n        }));\r\n    }, []);\r\n\r\n    const mouseUp = useCallback((): void => {\r\n        setDrawable(false);\r\n        /* \r\n            since canvas can't have draggable attribute, onDrag doesn't work,\r\n            therefore use mouseUp and mouseDown to simulate drag to draw shapes\r\n        */\r\n        switch (tool.mode) {\r\n            case TOOL_MODE.SHAPE.RECT:\r\n                (isShiftKeyOn) ? drawShapeSquare() : drawShapeRectangle();\r\n                break;\r\n            case TOOL_MODE.SHAPE.ELLIPSE:\r\n                (isShiftKeyOn) ? drawShapeCircle() : drawShapeEllipse();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        const ctx = getCanvasContext();\r\n        if (!ctx) return;\r\n\r\n        CANVAS.finishDraw(ctx);\r\n    }, [tool.mode, isShiftKeyOn, drawShapeRectangle, drawShapeSquare, drawShapeEllipse, drawShapeCircle , getCanvasContext]);\r\n\r\n    const mouseDown = useCallback((): void => {\r\n        setDrawable(true);\r\n\r\n        if (isShapeMode()) {\r\n            updateDragPositionState(position.x, position.y);\r\n        }\r\n    }, [position, isShapeMode, updateDragPositionState]);\r\n\r\n    const mouseMove = useCallback((e: MouseEvent): void => {\r\n        updatePositionState(e.x, e.y);\r\n    }, [updatePositionState]);\r\n\r\n    const touchStart = useCallback((e: TouchEvent): void => {\r\n        const { x, y } = getTouchPosition(e);\r\n\r\n        updatePositionState(x, y);\r\n\r\n        if (isShapeMode()) {\r\n            updateDragPositionState(x, y);\r\n        }\r\n    }, [isShapeMode, updatePositionState, updateDragPositionState]);\r\n\r\n    const touchMove = useCallback((e: TouchEvent): void => {\r\n        const { x, y } = getTouchPosition(e);\r\n\r\n        setDrawable(true);\r\n        updatePositionState(x, y);\r\n    }, [updatePositionState]);\r\n\r\n    const keyUp = useCallback((): void => {\r\n        setIsShiftKeyOn(false);\r\n    }, []);\r\n\r\n    const keyDown = useCallback((e: KeyboardEvent): void => {\r\n        setIsShiftKeyOn(e.key === KEYBOARD_KEY.SHIFT);\r\n    }, []);\r\n\r\n    useEffect((): void => {\r\n        if (drawable) {\r\n            draw();\r\n        }\r\n    }, [drawable, draw]);\r\n\r\n    useEventListener(EVENT_LISTENER.MOUSE.UP, mouseUp);\r\n    useEventListener(EVENT_LISTENER.MOUSE.DOWN, mouseDown);\r\n    useEventListener(EVENT_LISTENER.MOUSE.MOVE, mouseMove);\r\n\r\n    useEventListener(EVENT_LISTENER.KEY.UP, keyUp);\r\n    useEventListener(EVENT_LISTENER.KEY.DOWN, keyDown);\r\n\r\n    useEventListener(EVENT_LISTENER.TOUCH.START, touchStart);\r\n    useEventListener(EVENT_LISTENER.TOUCH.END, mouseUp);\r\n    useEventListener(EVENT_LISTENER.TOUCH.MOVE, touchMove);\r\n\r\n    return (\r\n        <>\r\n            <div id='cursor' className={CURSOR_CLASS[tool.mode]} style={getCursorStyle()}/>\r\n            <ShapePreviewer toolMode={tool.mode} toolColor={tool.color} isShiftKeyOn={isShiftKeyOn} \r\n                dragPosition      = {getDragPosition()}\r\n                position          = {getPosition()}\r\n                previewConditions = {getPreviewConditions()}\r\n                regularShape      = {getRegularShape()}\r\n            />\r\n        </>\r\n    );\r\n});","import React, { useState, useEffect, useCallback, RefObject } from 'react';\r\nimport { APP_SETTING } from '../helper/constants';\r\nimport { Type } from '../types';\r\n\r\ninterface Props {\r\n    ref: RefObject<HTMLCanvasElement>;\r\n    panelRef: RefObject<HTMLDivElement>;\r\n    width: number;\r\n    height: number;\r\n    hasGrid: boolean;\r\n}\r\n\r\ntype Ref = HTMLCanvasElement;\r\n\r\nexport const Canvas: React.FC<Props> = React.memo(React.forwardRef<Ref, Props>((\r\n    { width, height, hasGrid, panelRef }, ref) => {\r\n    const [grid, setGrid] = useState<Type.Grid>({\r\n        x: 0,\r\n        y: 0,\r\n        rows: 0,\r\n        cols: 0,\r\n        lineGap: APP_SETTING.GRID.GAP, \r\n    });\r\n\r\n    const getPanelHeight = useCallback(() => {\r\n        return (panelRef.current) ? panelRef.current.clientHeight : 0;\r\n    }, [panelRef]);\r\n\r\n    useEffect((): void => {\r\n        setGrid(prevState => ({\r\n            ...prevState,\r\n            x: 0,\r\n            y: getPanelHeight(),\r\n            cols: window.innerWidth,\r\n            rows: window.innerHeight,\r\n        }));\r\n    }, [getPanelHeight]);\r\n\r\n    const createGrid = useCallback((): React.ReactElement[] => {\r\n        let gridLines: React.ReactElement[] = [];\r\n        \r\n        for (let i = grid.y; i < grid.rows + grid.y; i += grid.lineGap) {\r\n            gridLines.push(\r\n                <span className='grid-line horizontal' key={`horizontal${i}`}\r\n                    style={{ 'top': `${i}px` }}> \r\n                </span>\r\n            );\r\n        }\r\n        for (let i = 0; i < grid.cols; i += grid.lineGap) {\r\n            gridLines.push(\r\n                <span className='grid-line vertical' key={`vertical${i}`}\r\n                    style={{\r\n                        'top': `${grid.y}px`,\r\n                        'left': `${i}px`,\r\n                        'height': `calc(100% - ${grid.y}px)`,\r\n                    }}>\r\n                </span>\r\n            );\r\n        }\r\n\r\n        return gridLines;\r\n    }, [grid]);\r\n\r\n    useEffect((): void => {\r\n        setGrid(prevState => ({\r\n            ...prevState,\r\n            x: 0,\r\n            y: getPanelHeight(),\r\n            cols: width,\r\n            rows: height,\r\n        }));\r\n    }, [width, height, getPanelHeight]);\r\n\r\n    return (\r\n        <>\r\n            <canvas id='canvas' ref={ref} width={width} height={height}/>\r\n            {hasGrid && createGrid()}\r\n        </>\r\n    );\r\n}));","import React, { RefObject } from 'react';\r\n\r\ntype Ref = HTMLInputElement;\r\n\r\ninterface BackgroundProps {\r\n    ref: RefObject<HTMLInputElement>;\r\n    defaultValue: string;\r\n    handleBackgroundColorChange(e: React.ChangeEvent<HTMLInputElement>): void;\r\n}\r\n\r\ninterface Props {\r\n    handleOnClick(): void;\r\n}\r\n\r\nexport const BackgroundPicker: React.FC<BackgroundProps> = React.memo(React.forwardRef<Ref, BackgroundProps>((props, ref) => {\r\n    return (\r\n        <input type='color' className='canvas-background-picker' \r\n            ref={ref} defaultValue={props.defaultValue}\r\n            onChange={(e) => props.handleBackgroundColorChange(e)}\r\n        />\r\n    );\r\n}));\r\n\r\nexport const Grid: React.FC<Props> = React.memo((props) => {\r\n    return (\r\n        <button className='icon grid' onClick={() => props.handleOnClick()}/>\r\n    );\r\n});\r\n\r\nexport const TrashCan: React.FC<Props> = React.memo((props) => {\r\n    return (\r\n        <button className='icon trash-can' onClick={() => props.handleOnClick()}/>\r\n    );\r\n});\r\n\r\nexport const Save: React.FC<Props> = React.memo((props) => {\r\n    return (\r\n        <button className='icon save' onClick={() => props.handleOnClick()}/>\r\n    );\r\n});","import React, { RefObject, useCallback, useMemo, useRef } from 'react';\r\nimport { COLOR as COLOR_CONVERTER } from '../helper/color';\r\nimport { APP_SETTING, COLOR, TOOL_MODE, EVENT_LISTENER } from '../helper/constants';\r\nimport { BackgroundPicker, Grid, TrashCan, Save } from './Functions';\r\nimport { useEventListener } from '../hooks/useEventListener';\r\nimport { REGREX } from '../helper/regrex';\r\n\r\ninterface Props {\r\n    ref: RefObject<HTMLDivElement>;\r\n    toolSize: number;\r\n    handleCanvasClear: Function;\r\n    handleCanvasBackgroundColorChange: Function;\r\n    handleExportAsImage: Function;\r\n    handleToolColorChange: Function;\r\n    handleToolModeChange: Function;        \r\n    handleToolSizeChange: Function; \r\n    handleGridShow: Function;\r\n}\r\n\r\ntype Ref = HTMLDivElement;\r\n\r\nexport const Panel: React.FC<Props> = React.memo(React.forwardRef<Ref, Props>((\r\n    { toolSize, handleCanvasBackgroundColorChange, handleCanvasClear,\r\n    handleExportAsImage, handleGridShow, handleToolColorChange,\r\n    handleToolModeChange, handleToolSizeChange, }, ref) => {\r\n\r\n    const toolSizeRef = useRef<HTMLInputElement>(null);\r\n    const canvasBackgroundPickerRef = useRef<HTMLInputElement>(null);\r\n\r\n    const colors = useMemo((): string[] => {\r\n        return ([\r\n            COLOR.BLACK,\r\n            COLOR.WHITE,\r\n            COLOR.RED,\r\n            COLOR.GREEN,\r\n            COLOR.BLUE,\r\n        ]);\r\n    }, []);\r\n\r\n    const modes = useMemo(() => {\r\n        return ([\r\n            { className: 'pen', name: TOOL_MODE.PEN },\r\n            { className: 'circle', name: TOOL_MODE.CIRCLE },\r\n            { className: 'square', name: TOOL_MODE.SQUARE },\r\n        ]);\r\n    }, []);\r\n\r\n    const shapeModes = useMemo(() => {\r\n        return ([\r\n            { className: 'ellipse', name: TOOL_MODE.SHAPE.ELLIPSE },\r\n            { className: 'rect', name: TOOL_MODE.SHAPE.RECT },\r\n        ]);\r\n    }, []);\r\n\r\n    const keyDown = useCallback((e: KeyboardEvent): void => {\r\n        if (colors.length === 0) {\r\n            return;\r\n        }\r\n        const colorNum: RegExp = REGREX.getRegrexNumberRange(1, colors.length);\r\n        // passing color element at out of boundary index casues vertical pen cursor to disappear\r\n        if (e.key.match(colorNum)) {\r\n            handleToolColorChange(colors[Number(e.key) - 1]);\r\n        }\r\n    }, [handleToolColorChange, colors]);\r\n\r\n    const changeToolColor = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const color: string = COLOR_CONVERTER.convertHexToRgb(e.currentTarget.value);\r\n        handleToolColorChange(color);\r\n    };\r\n    \r\n    const changeBackgroundColor = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const color: string = COLOR_CONVERTER.convertHexToRgb(e.currentTarget.value);\r\n        handleCanvasBackgroundColorChange(color);\r\n    };\r\n\r\n    useEventListener(EVENT_LISTENER.KEY.DOWN, keyDown);\r\n\r\n    return (\r\n        <div id='panel' ref={ref}> \r\n            <div className='tool-mode'>\r\n                {modes.map((mode) => \r\n                    <button key={`tool_${mode.name}`} className={`icon ${mode.className}`} \r\n                        onClick={() => handleToolModeChange(mode.name)}\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className='tool-size'>\r\n                <label className='lbl-size'>{toolSize}</label>\r\n                <input type='range' className='ipt-size' id='mouseRadius' min='1' max='100' \r\n                    ref={toolSizeRef} defaultValue={toolSize}\r\n                    onChange={(e) => handleToolSizeChange(e.currentTarget.value)}\r\n                />\r\n            </div>\r\n            <div className='color-palette'>\r\n                {colors.map(color => \r\n                    <button key={color} className='btn color' \r\n                        style={{backgroundColor: color}}\r\n                        onClick={() => handleToolColorChange(color)}\r\n                    />\r\n                )}\r\n                <input type='color' className='tool-color-picker' \r\n                    defaultValue={COLOR_CONVERTER.convertRgbToHex(COLOR.WHITE)}\r\n                    onChange={(e) => changeToolColor(e)}\r\n                />\r\n            </div>\r\n           <div className='features'>\r\n                {shapeModes.map((mode) => \r\n                        <button key={`feature_${mode.name}`} className={`icon ${mode.className}`} \r\n                            onClick={() => handleToolModeChange(mode.name)}\r\n                        />\r\n                )}\r\n                <BackgroundPicker ref={canvasBackgroundPickerRef}\r\n                    defaultValue={COLOR_CONVERTER.convertRgbToHex(APP_SETTING.CANVAS.BACKGROUND_COLOR)}\r\n                    handleBackgroundColorChange={changeBackgroundColor}\r\n                />\r\n                <Grid handleOnClick={() => handleGridShow()}/>\r\n                <TrashCan handleOnClick={() => handleCanvasClear()}/>\r\n                <Save handleOnClick={() => handleExportAsImage()}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}));","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Cursor } from './components/Cursor';\r\nimport { Canvas } from './components/Canvas';\r\nimport { Panel } from './components/Panel';\r\nimport { useEventListener } from './hooks/useEventListener';\r\nimport { APP_SETTING, EVENT_LISTENER } from './helper/constants';\r\nimport { Type } from './types';\r\nimport './assets/scss/main.css';\r\n\r\nexport const App: React.FC = () => {\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const panelRef = useRef<HTMLDivElement>(null);\r\n  const [hasGrid, setHasGrid] = useState<boolean>(false);\r\n  const [canvas, setCanvas] = useState<Type.Canvas>({ width: 0, height: 0, });\r\n  const [tool, setTool] = useState<Type.Tool>({\r\n    color: APP_SETTING.TOOL.COLOR,\r\n    mode: APP_SETTING.TOOL.MODE,\r\n    size: APP_SETTING.TOOL.SIZE,\r\n  });\r\n\r\n  const getCanvasContext = (): CanvasRenderingContext2D | null => {\r\n    return (canvasRef.current) ? canvasRef.current.getContext('2d') : null;\r\n  };\r\n\r\n  const getPanelHeight = (): number => {\r\n    return (panelRef.current) ? panelRef.current.clientHeight : 0;\r\n  };\r\n\r\n  const changeToolColor = useCallback((value: string): void => {\r\n    setTool(prevState => ({ ...prevState, color: value }));\r\n  }, []);\r\n\r\n  const changeToolMode = useCallback((value: string): void => {\r\n    setTool(prevState => ({ ...prevState, mode: value }));\r\n  }, []);\r\n\r\n  const changeToolSize = useCallback((value: number): void => {\r\n    setTool(prevState => ({ ...prevState, size: value }));\r\n  }, []);\r\n\r\n  const changeCanvasBackgroundColor = useCallback((value: string): void => {\r\n    canvasRef.current!.style.backgroundColor = value;\r\n  }, []);\r\n\r\n  const clearCanvas = useCallback((): void => {\r\n    const ctx = getCanvasContext();\r\n    if (ctx) {\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n  }, [canvas]);\r\n\r\n  const resize = useCallback((e): void => {\r\n    setCanvas(prevState => ({\r\n      ...prevState,\r\n      width: e.currentTarget.outerWidth, // innerWidth doesn't work\r\n      height: e.currentTarget.innerHeight - getPanelHeight(),\r\n    }));\r\n  }, []);\r\n\r\n  const showGrid = (): void => {\r\n    setHasGrid(!hasGrid);\r\n  };\r\n\r\n  const exportCanvasAsImage = (): void => {\r\n    const ctx = canvasRef.current;\r\n    if (!ctx) return;\r\n    \r\n    const image: string = ctx.toDataURL('image/png');\r\n    const anchorElement: HTMLAnchorElement = document.createElement('a');\r\n\r\n    anchorElement.download = 'image.png' as string;\r\n    anchorElement.href = image as string;\r\n    anchorElement.click();\r\n  };\r\n\r\n  useEventListener(EVENT_LISTENER.RESIZE, resize);\r\n\r\n  useEffect(() => {\r\n    setCanvas(prevState => ({\r\n      ...prevState, \r\n      width: window.innerWidth,\r\n      height: window.innerHeight - getPanelHeight(),\r\n    }));\r\n  }, []);\r\n\r\n  return (\r\n      <>\r\n        <Cursor canvasRef={canvasRef} panelRef={panelRef} tool={tool}/>\r\n        <Panel ref={panelRef} toolSize={tool.size}\r\n          handleCanvasClear                 = {clearCanvas}\r\n          handleCanvasBackgroundColorChange = {changeCanvasBackgroundColor}\r\n          handleExportAsImage               = {exportCanvasAsImage}\r\n          handleGridShow                    = {showGrid}\r\n          handleToolColorChange             = {changeToolColor}\r\n          handleToolModeChange              = {changeToolMode}\r\n          handleToolSizeChange              = {changeToolSize} \r\n        />\r\n        <Canvas ref={canvasRef} panelRef={panelRef}\r\n          width={canvas.width} height={canvas.height} hasGrid={hasGrid}\r\n        />\r\n      </>\r\n    );\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}